package org.imec.ivlab.validator.report;

import org.imec.ivlab.core.version.LocalVersionReader;
import org.imec.ivlab.validator.scanner.model.FileWithValidatedKmehrs;
import org.imec.ivlab.validator.scanner.model.ValidatedKmehr;
import org.imec.ivlab.validator.validators.business.rules.model.ExecutionStatus;
import org.imec.ivlab.validator.validators.business.rules.model.RuleResult;
import org.imec.ivlab.validator.validators.model.AbstractValidationItem;
import org.imec.ivlab.validator.validators.model.ValidationResult;
import org.imec.ivlab.validator.validators.xsd.model.XsdFailure;

import java.io.File;
import java.util.List;
import java.util.Objects;

public class FileWithValidatedKmehrsFormatter {

    public static String getOutput(List<FileWithValidatedKmehrs> filesWithValidatedKmehrs) {
        StringBuilder sb = new StringBuilder();
        sb.append("Generated by ").append(LocalVersionReader.getInstalledSoftwareAndVersion()).append(System.lineSeparator()).append(System.lineSeparator());
        sb.append(createSummaryTable(filesWithValidatedKmehrs));
        sb.append(System.lineSeparator());
        sb.append(createValidationDetailsTable(filesWithValidatedKmehrs));
        return sb.toString();
    }

    private static int getFailedCount(List<FileWithValidatedKmehrs> filesWithValidatedKmehrs) {
        if (filesWithValidatedKmehrs.isEmpty()) {
            return 0;
        }
        ValidatedKmehr validatedKmehr = filesWithValidatedKmehrs.get(0).getValidatedKmehrs().get(0);
        if (validatedKmehr.getValidationResult() != null) {
            return validatedKmehr.getValidationResult().getFailedRulesCount();
        } else {
            return 0;
        }
    }

    private static int getInterruptedCount(List<FileWithValidatedKmehrs> filesWithValidatedKmehrs) {
        if (filesWithValidatedKmehrs.isEmpty()) {
            return 0;
        }
        ValidatedKmehr validatedKmehr = filesWithValidatedKmehrs.get(0).getValidatedKmehrs().get(0);
        if (validatedKmehr.getValidationResult() != null) {
            return validatedKmehr.getValidationResult().getInterruptedRulesCount();
        } else {
            return 0;
        }
    }

    private static String createSummaryTable(List<FileWithValidatedKmehrs> filesWithValidatedKmehrs) {
        StringBuilder sb = new StringBuilder();
        sb.append("+----------------------+---------------+-----------------+").append(System.lineSeparator());
        sb.append("|                      |     Fail      |   Interrupted   |").append(System.lineSeparator());
        sb.append("+----------------------+---------------+-----------------+").append(System.lineSeparator());
        sb.append("| Rule execution       |      ").append(String.valueOf(getFailedCount(filesWithValidatedKmehrs)))
          .append("      |       ").append(String.valueOf(getInterruptedCount(filesWithValidatedKmehrs)))
          .append("        |").append(System.lineSeparator());
        sb.append("+----------------------+---------------+-----------------+").append(System.lineSeparator());
        return sb.toString();
    }

    private static String createValidationDetailsTable(List<FileWithValidatedKmehrs> filesWithValidatedKmehrs) {
        StringBuilder sb = new StringBuilder();
        sb.append("+----------------+----------+----------------+-------+----------------+---------+------+").append(System.lineSeparator());
        sb.append("| TransactionId  |  RuleId  | ExecutionStatus| Level |     Message    | Filename| Path |").append(System.lineSeparator());
        sb.append("+----------------+----------+----------------+-------+----------------+---------+------+").append(System.lineSeparator());

        for (FileWithValidatedKmehrs fileWithValidatedKmehrs : filesWithValidatedKmehrs) {
            for (ValidatedKmehr validatedKmehr : fileWithValidatedKmehrs.getValidatedKmehrs()) {
                processValidationResult(validatedKmehr, sb, fileWithValidatedKmehrs.getFile());
            }
        }

        sb.append("+----------------+----------+----------------+-------+----------------+---------+------+").append(System.lineSeparator());
        return sb.toString();
    }

    private static void processValidationResult(ValidatedKmehr validatedKmehr, StringBuilder sb, File file) {
        ValidationResult validationResult = validatedKmehr.getValidationResult();

        if (validationResult == null) {
            return;
        }

        for (AbstractValidationItem validationItem : validationResult.getFailedList()) {
            appendValidationItem(sb, validationItem, file);
        }

        for (RuleResult ruleResult : validationResult.getInterruptedList()) {
            sb.append("| ").append(ensureNotNull(ruleResult.getTransactionId())).append(" | ")
              .append(Objects.toString(ruleResult.getRuleId(), "")).append(" | ")
              .append(ruleResult.getExecutionStatus().name()).append(" | ")
              .append(ruleResult.getLevel().name()).append(" | ")
              .append(ruleResult.getMessage()).append(" | ")
              .append(file.getName()).append(" | ")
              .append(file.getAbsolutePath()).append(" |").append(System.lineSeparator());
        }
    }

    private static void appendValidationItem(StringBuilder sb, AbstractValidationItem validationItem, File file) {
        if (validationItem instanceof RuleResult) {
            RuleResult ruleResult = (RuleResult) validationItem;
            sb.append("| ").append(ensureNotNull(ruleResult.getTransactionId())).append(" | ")
              .append(ruleResult.getRuleId()).append(" | ")
              .append(ruleResult.getExecutionStatus().name()).append(" | ")
              .append(ruleResult.getLevel().name()).append(" | ")
              .append(ruleResult.getMessage()).append(" | ")
              .append(file.getName()).append(" | ")
              .append(file.getAbsolutePath()).append(" |").append(System.lineSeparator());
        }

        if (validationItem instanceof XsdFailure) {
            XsdFailure xsdFailure = (XsdFailure) validationItem;
            sb.append("| ").append("").append(" | ")
              .append("").append(" | ")
              .append(ExecutionStatus.FAIL.name()).append(" | ")
              .append(xsdFailure.getLevel().name()).append(" | ")
              .append(xsdFailure.getMessage()).append(" | ")
              .append(file.getName()).append(" | ")
              .append(file.getAbsolutePath()).append(" |").append(System.lineSeparator());
        }
    }

    private static String ensureNotNull(String string) {
        return string != null ? string : "";
    }
}
